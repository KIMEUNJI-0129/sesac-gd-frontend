.container {
  /* display: flex; 자식요소의 정렬 방법을 지정하는 속성 */
  /* display: inline-flex 속성도 있음 */
  /* flex와 inline-flex의 차이 */
  /* flex는 부모 요소가 수직으로 쌓임 block 요소처럼 */
  /* linline 요소는 부모 요소가 수평으로 쌓임 inlline 요소처럼 */

  /* display: flex; 는 기본적으로 자식 요소들이 왼쪽에서 오른쪽으로 쌓임 */
  /* 즉, 주축의 기본 방향이 좌 -> 우 */
  /* 주축 : main axis */
  /* 교차축 : cross axis */
  display: flex;
  width: 100vw;
  background-color: bisque;

  /* flex-direction 주축의 방향 지정, 시작점 변경 */
  /* flex-direction: row; (default) */
  /* row-reverse : 우->좌로 자식 요소들이 쌓임 */
  /* flex-direction: row-reverse; */

  /* column : 위->아래로 자식 요소들이 쌓임 */
  /* flex-direction: column; */
  /* column-reverse : 아래->위로 자식 요소들이 쌓임 */
  /* flex-direction: column-reverse; */

  /* flex-direction: row;
  width: 350px; */
  /* flex 속성 사용 시 컨테이너의 너비가 아이템들의 너비보다
  작을 때 줄바꿈을 지정 */
  /* flex-wrap: nowrap; (default) */
  /* flex-wrap: wrap;
  flex-wrap: wrap-reverse; */

  /* justyfy-content : 주축 아이템의 정렬 방법, 배치 방법 */
  /* 
  -justyfy-content: flex-start (default) -> 아이템을 start 지점을 기준으로 나열
  -justyfy-content: flex-end -> 아이템을 end 지점을 기준으로 나열
  -justyfy-content: space-around -> 아이템들의 모든 여백을 동일하게 갖도록 함(양끝 여백의 단위가 1이라면, 아이템 사이 여백은 2)
  -justyfy-content: space-evenly -> star부터 첫 아이템의 간격, 아이템 사이 간격, 마지막 아이템부터 end까지의 모든 간격이 동일
  -justyfy-content: space-between -> 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 아이템 사이 간격을 동일하게 나눔
  */
  justify-content: flex-end;
  /* flex-direction: row-reverse 와는 다르다! 순서가 바뀌지 않고, 정렬 방식만 달라지는 것. */

  justify-content: space-around;
  justify-content: space-evenly;
  justify-content: space-between;
}

.item {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}

.item1 {
  background-color: red;
}

.item2 {
  background-color: blue;
}

.item3 {
  background-color: green;
}

.item4 {
  background-color: yellow;
}

.item5 {
  background-color: pink;
}
